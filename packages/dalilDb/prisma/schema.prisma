generator client {
  provider        = "prisma-client-js"
  output          = "./generated"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DALILSHAFI_DATABASE_URL")
  schemas  = ["appt", "dal", "dbo", "fawt", "huia", "lab", "med"]
}

model EFMigrationsHistory {
  MigrationId    String @id(map: "PK___EFMigrationsHistory") @db.NVarChar(150)
  ProductVersion String @db.NVarChar(32)

  @@map("__EFMigrationsHistory")
  @@schema("dbo")
}

model Attachments {
  Id             Int       @id(map: "PK_Attachments") @default(autoincrement())
  AttachmentId   String?   @db.NVarChar(55)
  ReferenceId    String?   @db.NVarChar(55)
  ReferenceType  Int?
  Description    String?   @db.NVarChar(250)
  addedAt        DateTime? @db.DateTime
  addedBy        Int?      @default(1, map: "DF_Attachments_addedBy")
  insertedAt     DateTime? @default(now(), map: "DF_Attachments_insertedAt") @db.DateTime
  AttachmentFile Bytes?
  AttachmentPath String?   @db.NVarChar(500)
  AttachmentExt  String?   @db.NVarChar(5)

  @@index([ReferenceId], map: "NonClusteredIndex-20240821-101856")
  @@schema("dbo")
}

model cities {
  id               Int                @default(autoincrement())
  CityId           String             @id(map: "PK__cities__F2D21B76DCEC0DD9") @db.NVarChar(55)
  CityCode         String             @db.NVarChar(55)
  CityName         String             @db.NVarChar(55)
  Doctors          Doctors[]
  DoctorsScheduals DoctorsScheduals[]
  healthCenters    healthCenters[]

  @@schema("appt")
}

model ClaimStatus {
  StatusId    String   @id(map: "PK_ClaimStatus") @db.NVarChar(55)
  Addministry Boolean?
  Medically   Boolean?
  Financially Boolean?
  Rejected    Boolean?

  @@schema("dbo")
}

model cloudRequests {
  id       Int    @id(map: "PK_cloudRequests") @default(autoincrement())
  request  String @db.NVarChar(10)
  url      String @db.NVarChar(500)
  JSONBody String @db.NVarChar(Max)

  @@schema("dbo")
}

model CloudRequestsBooking {
  id       Int    @id(map: "PK__CloudReq__3213E83FD8CB0D64") @default(autoincrement())
  request  String @db.NVarChar(10)
  url      String @db.NVarChar(500)
  JSONBody String @db.NVarChar(Max)

  @@schema("appt")
}

model Currency {
  currencyID     String          @id(map: "PK_Currency") @db.VarChar(20)
  CurrencyCode   String          @db.VarChar(10)
  CurrencyName   String          @db.NVarChar(50)
  currencyPrice  Decimal         @db.Decimal(8, 4)
  CurrencySymbol String?         @db.NVarChar(5)
  healthCenters  healthCenters[]

  @@index([currencyID], map: "NonClusteredIndex-CurrencyIdWithInclude")
  @@schema("fawt")
}

model Doctors {
  id               Int                @default(autoincrement())
  DoctorId         String             @id(map: "PK__Doctors__2DC00EBFAB9F0EF2") @db.NVarChar(55)
  DoctorName       String             @db.NVarChar(100)
  Title            String             @db.NVarChar(55)
  CityId           String             @db.NVarChar(55)
  SectionCode      String             @db.NVarChar(55)
  IsActive         Boolean
  cities           cities             @relation(fields: [CityId], references: [CityId], onUpdate: NoAction, map: "FK_Doctors_cities")
  Sections         Sections           @relation(fields: [SectionCode], references: [sectionCode], onUpdate: NoAction, map: "FK_Doctors_Sections")
  DoctorsScheduals DoctorsScheduals[]

  @@schema("appt")
}

model DoctorsScheduals {
  id            Int           @default(autoincrement())
  SchedualCode  String        @id(map: "PK__DoctorsS__CDE6B9A8C76D6842") @db.NVarChar(55)
  TermId        String        @db.NVarChar(55)
  Day           String        @db.NVarChar(20)
  DoctorId      String        @db.NVarChar(55)
  CityId        String        @db.NVarChar(55)
  ClinicId      String        @db.NVarChar(55)
  IsActive      Boolean
  CountOf       Int
  cities        cities        @relation(fields: [CityId], references: [CityId], onUpdate: NoAction, map: "FK_DoctorsScheduals_cities")
  Doctors       Doctors       @relation(fields: [DoctorId], references: [DoctorId], onUpdate: NoAction, map: "FK_DoctorsScheduals_Doctors")
  healthCenters healthCenters @relation(fields: [ClinicId], references: [centerId], onUpdate: NoAction, map: "FK_DoctorsScheduals_healthCenters")
  // Terms         appt_Terms    @relation(fields: [TermId], references: [TermId], onUpdate: NoAction, map: "FK_DoctorsScheduals_Terms") @ignore

  @@schema("appt")
}

model Examination_services {
  id                   Int                @id(map: "PK_Examination_services") @default(autoincrement())
  patientServiceId     String             @db.NVarChar(55)
  patientExaminationID String             @db.NVarChar(55)
  PatientExamination   PatientExamination @relation(fields: [patientExaminationID], references: [patientExaminationID], map: "FK_Examination_services_PatientExamination", onUpdate: NoAction)
  PatientServices      PatientServices    @relation(fields: [patientServiceId], references: [patientSeviceId], onDelete: Cascade, map: "FK_Examination_services_PatientServices", onUpdate: NoAction)

  @@unique([patientServiceId, patientExaminationID], map: "uq_Examination_services")
  @@index([patientServiceId], map: "idx_patientServiceId")
  @@schema("fawt")
}

model ExaminationAttachments {
  Id             Int       @id(map: "PK_ExaminationAttachments") @default(autoincrement())
  AttachmentId   String?   @db.NVarChar(55)
  ExaminationId  String?   @db.NVarChar(55)
  Description    String?   @db.NVarChar(250)
  addedAt        DateTime? @db.DateTime
  addedBy        Int?      @default(1, map: "DF_ExaminationAttachments_addedBy")
  insertedAt     DateTime? @default(now(), map: "DF_ExaminationAttachments_insertedAt") @db.DateTime
  AttachmentFile Bytes?
  AttachmentPath String?   @db.NVarChar(500)
  AttachmentExt  String?   @db.NVarChar(5)

  @@schema("fawt")
}

model ExaminationData {
  id                 Int                @id(map: "PK_ExaminationData") @default(autoincrement())
  dataId             String             @db.NVarChar(255)
  ExaminationId      String             @db.NVarChar(55)
  descriptionText    String             @db.NText
  descriptionImage   Bytes?
  diagnosisCode      String?            @db.NVarChar(50)
  image_path         String?            @db.NVarChar(500)
  specialtyId        String?            @default("N/A", map: "DF__Examinati__speci__75441CF0") @db.NVarChar(55)
  PatientExamination PatientExamination @relation(fields: [ExaminationId], references: [patientExaminationID], onDelete: Cascade, map: "FK_ExaminationData_PatientExamination")

  @@schema("fawt")
}

model ExaminationData_scanner {
  id               Int       @id(map: "PK_ExaminationData_scanner") @default(autoincrement())
  ExaminationId    String?   @db.NVarChar(55)
  descriptionImage Bytes?
  addedAt          DateTime? @default(now(), map: "DF_ExaminationData_scanner_addedAt") @db.DateTime
  centerId         String?   @db.NVarChar(55)
  addedBy          Int?      @default(1, map: "DF_ExaminationData_scanner_addedBy")
  insertedAt       DateTime? @default(now(), map: "DF_ExaminationData_scanner_insertedAt") @db.DateTime
  image_path       String?   @db.NVarChar(500)

  @@index([ExaminationId], map: "NonClusteredIndex-20240821-102330")
  @@schema("dbo")
}

model ExaminationsClinics {
  ExaminationClinicId String  @id(map: "PK__Examinat__0102214A0DF650E5") @db.NVarChar(55)
  DoctorId            String? @db.NVarChar(55)
  ExaminationId       Int?

  @@schema("appt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ExaminationServices_StatusChange {
  patientSeviceId String   @db.NVarChar(55)
  ServiceType     Int
  invoiceId       String   @db.NVarChar(55)
  OldCliamStatus  String   @db.NVarChar(55)
  NewCliamStatus  String   @db.NVarChar(55)
  Rejected        Decimal  @db.Decimal(18, 3)
  EditedAt        DateTime @db.DateTime
  Note            String?  @db.NVarChar(500)
  staffId         String   @db.NVarChar(55)

  @@ignore
  @@schema("fawt")
}

model Filter {
  FilterId            String            @id(map: "PK_dal.Filter") @db.NVarChar(55)
  FilterName          String            @db.NVarChar(55)
  FilterDescription   String            @db.NVarChar(Max)
  FilterProcess       Int
  FilterOn            Int
  storedprocedureName String            @db.NVarChar(200)
  filterOrder         Int?
  isActive            Int               @db.SmallInt
  FilterParameter     FilterParameter[]

  @@schema("dal")
}

model FilterParameter {
  ParameterId   String @id(map: "PK_dal].[FilterParameter") @db.NVarChar(55)
  FilterId      String @db.NVarChar(55)
  ParameterName String @db.NVarChar(55)
  Filter        Filter @relation(fields: [FilterId], references: [FilterId], onUpdate: NoAction, map: "FK_FilterParameter_Filter")

  @@schema("dal")
}

model fingerprints {
  id                      Int         @id(map: "PK_fingerprints_id") @default(autoincrement())
  fingerprintsId          String      @unique(map: "fingerprints$fingerprintsId") @db.NVarChar(255)
  subscriberId            String      @unique(map: "fingerprints$subscriberId") @db.NVarChar(55)
  rightThumbFingerprint   Int         @default(0, map: "DF__fingerpri__right__7A672E12") @db.SmallInt
  rightIndexFingerprint   Int         @default(0, map: "DF__fingerpri__right__7B5B524B") @db.SmallInt
  rightMiddleFingerprint  Int         @default(0, map: "DF__fingerpri__right__7C4F7684") @db.SmallInt
  rightRingFingerprint    Int         @default(0, map: "DF__fingerpri__right__7D439ABD") @db.SmallInt
  rightLittleFingerprint  Int         @default(0, map: "DF__fingerpri__right__7E37BEF6") @db.SmallInt
  leftThumbFingerprint    Int         @default(0, map: "DF__fingerpri__leftT__7F2BE32F") @db.SmallInt
  leftIndexFingerprint    Int         @default(0, map: "DF__fingerpri__leftI__00200768") @db.SmallInt
  leftMiddleFingerprint   Int         @default(0, map: "DF__fingerpri__leftM__01142BA1") @db.SmallInt
  leftRingFingerprint     Int         @default(0, map: "DF__fingerpri__leftR__02084FDA") @db.SmallInt
  leftLittleFingerprint   Int         @default(0, map: "DF__fingerpri__leftL__02FC7413") @db.SmallInt
  allFingerprintTemplates String?     @db.NVarChar(Max)
  createFingerprint       Int?        @db.SmallInt
  subscribers             subscribers @relation(fields: [subscriberId], references: [subscriberId], onDelete: Cascade, map: "fingerprints$fingerprints_subscriber_id")

  @@schema("huia")
}

model fingerprints_updates {
  id            Int           @id(map: "PK_fingerprints_updates") @default(autoincrement())
  subscriberId  String        @db.NVarChar(55)
  updateDate    DateTime      @db.DateTime
  centerId      String        @db.NVarChar(55)
  healthCenters healthCenters @relation(fields: [centerId], references: [centerId], onUpdate: NoAction, map: "FK_fingerprints_updates_healthCenters")
  subscribers   subscribers   @relation(fields: [subscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK_fingerprints_updates_subscribers")

  @@schema("huia")
}

model healthcenter_contracts {
  id                     Int                      @id(map: "PK_healthcenter_contracts") @default(autoincrement())
  contractId             String                   @unique(map: "IX_healthcenter_contracts") @db.NVarChar(55)
  centerID               String                   @db.NVarChar(55)
  startDate              DateTime                 @db.Date
  EndDate                DateTime                 @db.Date
  renewDate              DateTime?                @db.Date
  reminderTimer          Int
  discount               Int?
  isActive               Boolean
  healthCenters          healthCenters            @relation(fields: [centerID], references: [centerId], map: "FK_healthcenter_contracts_healthCenters")
  healthcenter_services  healthcenter_services[]
  healthcenterInstitutes healthcenterInstitutes[]

  @@schema("huia")
}

model healthcenter_services {
  id                          Int                         @id(map: "PK_InstituteServices") @default(autoincrement())
  ServiceID                   String                      @unique(map: "IX_healthcenter_services") @db.NVarChar(55)
  ServiceCode                 String                      @db.NVarChar(55)
  dalilServiceCode            String                      @db.NVarChar(55)
  ServiceName                 String                      @db.NVarChar(250)
  Price                       Decimal                     @db.Decimal(18, 2)
  updatedAt                   DateTime                    @db.DateTime
  contractId                  String?                     @db.NVarChar(55)
  isActive                    Boolean
  ServiceType                 Int?
  sectionCode                 String?                     @db.NVarChar(55)
  healthcenter_contracts      healthcenter_contracts?     @relation(fields: [contractId], references: [contractId], onDelete: NoAction, map: "FK_healthcenter_services_healthcenter_contracts")
  healthcenter_services       healthcenter_services       @relation("healthcenter_servicesTohealthcenter_services", fields: [id], references: [id], onUpdate: NoAction, map: "FK_healthcenter_services_healthcenter_services")
  other_healthcenter_services healthcenter_services?      @relation("healthcenter_servicesTohealthcenter_services")
  Services                    Services                    @relation(fields: [dalilServiceCode], references: [ServiceCode], map: "FK_healthcenter_services_Services")
  package_services            package_services[]
  subscriberCredit_Services   subscriberCredit_Services[]

  @@schema("fawt")
}

model healthcenterInstitutes {
  centerInstituteId      String                 @id(map: "PK_healthcenterInstitutes") @db.NVarChar(55)
  InstituteId            String                 @db.NVarChar(55)
  contractId             String                 @db.NVarChar(55)
  healthcenter_contracts healthcenter_contracts @relation(fields: [contractId], references: [contractId], onUpdate: NoAction, map: "FK_healthcenterInstitutes_healthcenter_contracts")
  institutes             institutes             @relation(fields: [InstituteId], references: [instituteId], onUpdate: NoAction, map: "FK_healthcenterInstitutes_institutes")

  @@unique([contractId, InstituteId], map: "IX_healthcenterInstitutes")
  @@schema("huia")
}

model healthCenters {
  id                        BigInt                      @id(map: "PK_healthCenters") @default(autoincrement())
  centerId                  String                      @unique(map: "IX_healthCenters") @db.NVarChar(55)
  centerName                String                      @db.NVarChar(255)
  centerAllowance           Int
  isActive                  Boolean
  deactivationReason        String?                     @db.NVarChar(55)
  infoID                    String                      @db.NVarChar(55)
  VpnIp                     String?                     @db.NVarChar(15)
  CenterIcon                Bytes?                      @db.Image
  currencyID                String?                     @db.VarChar(20)
  CityId                    String?                     @db.NVarChar(55)
  State                     Boolean?
  DoctorsScheduals          DoctorsScheduals[]
  fingerprints_updates      fingerprints_updates[]
  healthcenter_contracts    healthcenter_contracts[]
  cities                    cities?                     @relation(fields: [CityId], references: [CityId], onDelete: NoAction, map: "FK_healthCenters_cities")
  Currency                  Currency?                   @relation(fields: [currencyID], references: [currencyID], onDelete: NoAction, map: "FK_healthCenters_Currency")
  PartnerInfo               PartnerInfo                 @relation(fields: [infoID], references: [InfoId], map: "FK_healthCenters_PartnerInfo")
  Reasons                   huia_Reasons?               @relation(fields: [deactivationReason], references: [reasonId], onDelete: NoAction, map: "FK_healthCenters_Reasons")
  healthcenters_activations healthcenters_activations[]
  healthcenters_contact     healthcenters_contact[]
  healthCenters_credential  healthCenters_credential[]
  healthcenters_staff       healthcenters_staff[]
  healthcenters_tags        healthcenters_tags[]
  outReceipt                outReceipt[]
  subscribers_Credit        subscribers_Credit[]
  subscribers_records       subscribers_records[]

  //User added
  patientExaminations PatientExamination[]
  patientServices     PatientServices[]
  invoices            invoices[]
  //

  @@schema("huia")
}

model healthcenters_activations {
  id                     Int           @id(map: "PK_healthcenters_activations") @default(autoincrement())
  centerId               String        @db.NVarChar(55)
  activationToken        String        @db.NVarChar(55)
  activated              Int?          @db.SmallInt
  activationDate         DateTime?     @db.DateTime
  activationSerialNumber String?       @db.NVarChar(55)
  healthCenters          healthCenters @relation(fields: [centerId], references: [centerId], map: "FK_healthcenters_activations_healthCenters")

  @@schema("huia")
}

model healthcenters_contact {
  id                 Int           @id(map: "PK_healthcenters_deputy") @default(autoincrement())
  contactID          String        @unique(map: "IX_healthcenters_deputy") @db.NVarChar(55)
  centerID           String        @db.NVarChar(55)
  contactPosition    String?       @db.NVarChar(55)
  contactName        String?       @db.NVarChar(100)
  contactPhoneNumber String?       @db.NVarChar(20)
  contactEmail       String?       @db.NVarChar(55)
  isActive           Boolean?
  healthCenters      healthCenters @relation(fields: [centerID], references: [centerId], map: "FK_healthcenters_deputy_healthCenters")

  @@schema("huia")
}

model healthCenters_credential {
  id            Int           @id(map: "PK_healthCenters_credential") @default(autoincrement())
  credentialId  String        @db.VarChar(10)
  centerId      String        @db.NVarChar(55)
  userName      String        @db.NVarChar(20)
  password      String        @db.NVarChar(100)
  healthCenters healthCenters @relation(fields: [centerId], references: [centerId], map: "FK_healthCenters_credential_healthCenters")

  @@schema("huia")
}

model healthcenters_staff {
  id                              Int                               @id(map: "PK_clinics_staff_id") @default(autoincrement())
  staffId                         String                            @unique(map: "clinics_staff$staffId") @db.NVarChar(55)
  centerId                        String                            @db.NVarChar(55)
  username                        String                            @db.NVarChar(55)
  password                        String                            @db.NVarChar(55)
  isAdmin                         Int                               @default(0, map: "DF__clinics_s__isAdm__282DF8C2") @db.SmallInt
  isActive                        Int                               @db.SmallInt
  Application                     Int
  healthCenters                   healthCenters                     @relation(fields: [centerId], references: [centerId], map: "FK_healthcenters_staff_healthCenters")
  healthcenters_staff_info        healthcenters_staff_info?
  healthcenters_staff_permissions healthcenters_staff_permissions[]
  PatientExamination              PatientExamination[]
  subscribers_records             subscribers_records[]

  @@schema("huia")
}

model healthcenters_staff_info {
  id                  Int                 @id(map: "PK_clinics_staff_info_id") @default(autoincrement())
  staffId             String              @unique(map: "clinics_staff_info$staffId") @db.NVarChar(55)
  firstName           String              @db.NVarChar(255)
  fatherName          String              @db.NVarChar(255)
  grandFatherName     String              @db.NVarChar(255)
  familyName          String              @db.NVarChar(255)
  birthday            DateTime            @db.Date
  nationality         String              @db.NVarChar(5)
  nationalId          String              @db.NVarChar(255)
  gender              String              @db.NVarChar(1)
  passport            String              @db.NVarChar(255)
  residence           String              @db.NVarChar(255)
  healthcenters_staff healthcenters_staff @relation(fields: [staffId], references: [staffId], onDelete: Cascade, map: "clinics_staff_info$clinics_staff_info_staff_id")

  @@schema("huia")
}

model healthcenters_staff_permissions {
  id                  Int                  @id(map: "PK_healthcenters_staff_permissions") @default(autoincrement())
  StaffId             String?              @db.NVarChar(55)
  AddingService       Boolean?             @default(true, map: "DF_healthcenters_staff_permissions_AddingService")
  healthcenters_staff healthcenters_staff? @relation(fields: [StaffId], references: [staffId], onDelete: Cascade, onUpdate: NoAction, map: "FK_healthcenters_staff_permissions_healthcenters_staff")

  @@schema("huia")
}

model healthcenters_tags {
  id            Int           @id(map: "PK_healthcenters_tags") @unique(map: "IX_healthcenters_tags") @default(autoincrement())
  centerId      String        @db.NVarChar(55)
  tagId         String        @db.NVarChar(55)
  tags          tags          @relation(fields: [tagId], references: [tagId], onDelete: Cascade, map: "clinics_tags$clinics_tags_tag_id")
  healthCenters healthCenters @relation(fields: [centerId], references: [centerId], map: "FK_healthcenters_tags_healthCenters")

  @@schema("huia")
}

model InReceipts {
  Id          Int        @id(map: "PK_InReceipts") @default(autoincrement())
  ReceiptId   String     @unique(map: "IX_InReceipts") @db.NVarChar(55)
  InstituteId String     @db.NVarChar(55)
  Amount      Decimal    @db.Decimal(18, 3)
  PaymentType String     @db.NVarChar(50)
  ReceiptDate DateTime   @db.Date
  checkNo     String?    @db.NVarChar(40)
  bankName    String?    @db.NVarChar(250)
  checkDate   DateTime?  @db.Date
  institutes  institutes @relation(fields: [InstituteId], references: [instituteId], map: "FK_InReceipts_institutes")

  @@schema("fawt")
}

model Institute_contact {
  id                 Int        @id(map: "PK_Institute_contact") @default(autoincrement())
  contactId          String     @unique(map: "IX_Institute_contact") @db.NVarChar(55)
  InstituteId        String     @db.NVarChar(55)
  contactPosition    String?    @db.NVarChar(55)
  contactName        String?    @db.NVarChar(100)
  contactPhoneNumber String?    @db.NVarChar(20)
  contactEmail       String?    @db.NVarChar(55)
  isActive           Boolean?
  institutes         institutes @relation(fields: [InstituteId], references: [instituteId], onUpdate: NoAction, map: "FK_Institute_contact_institutes")

  @@schema("huia")
}

model Institute_contracts {
  id                 Int                 @id(map: "PK_Institute_contracts") @default(autoincrement())
  contractId         String              @unique(map: "IX_Institute_contracts") @db.NVarChar(55)
  instituteId        String              @db.NVarChar(55)
  coverageLimit      Decimal             @db.Decimal(18, 0)
  contract_start     DateTime            @db.Date
  contract_end       DateTime            @db.Date
  contractRenew      DateTime            @db.Date
  RemindTime         Int
  coverageSystem     Int?
  isActive           Boolean
  workInjuryCoverage Int?
  IsPersonal         Boolean?
  institutes         institutes          @relation(fields: [instituteId], references: [instituteId], onUpdate: NoAction, map: "FK_Institute_contracts_Institute_contracts")
  Packages           Packages[]
  Relation_Coverage  Relation_Coverage[]

  @@schema("huia")
}

model institutes {
  id                     Int                      @id(map: "PK_institutes_id") @default(autoincrement())
  instituteId            String                   @unique(map: "institutes$instituteId") @db.NVarChar(55)
  instituteName          String                   @db.NVarChar(55)
  infoID                 String                   @db.NVarChar(55)
  isActive               Boolean
  deactivationReason     String?                  @db.NVarChar(55)
  workInjuryCoverage     Int?
  instituteCode          String                   @db.NVarChar(5)
  InstituteIcon          Bytes?                   @db.Image
  DeductionPercentage    Int?                     @default(0, map: "DF_institutes_DeductionPercentage")
  healthcenterInstitutes healthcenterInstitutes[]
  InReceipts             InReceipts[]
  Institute_contact      Institute_contact[]
  Institute_contracts    Institute_contracts[]
  PartnerInfo            PartnerInfo              @relation(fields: [infoID], references: [InfoId], onUpdate: NoAction, map: "FK_institutes_partnrtinfo")
  institutes_tags        institutes_tags[]
  subscribers            subscribers[]

  //User added
  invoices invoices[]
  //

  @@schema("huia")
}

model institutes_tags {
  id          Int        @id(map: "PK_institutes_tags_id") @default(autoincrement())
  instituteId String     @db.NVarChar(55)
  tagId       String     @db.NVarChar(55)
  institutes  institutes @relation(fields: [instituteId], references: [instituteId], onUpdate: NoAction, map: "FK_institutes_tags_institutes_tags")
  tags        tags       @relation(fields: [tagId], references: [tagId], onDelete: Cascade, map: "institutes_tags$institutes_tags_tag_id")

  @@schema("huia")
}

model invoices {
  id             Int                  @id(map: "PK_invoices") @default(autoincrement())
  invoiceId      String               @unique(map: "IX_invoices") @db.NVarChar(55)
  invoiceName    String               @db.NVarChar(55)
  invoiceStart   DateTime             @db.DateTime
  invoiceEnd     DateTime?            @db.DateTime
  instituteId    String               @db.NVarChar(55)
  centerId       String               @db.NVarChar(55)
  isOpen         Int
  lastId         Int?
  writtenValue   Decimal?             @default(0, map: "DF_invoices_writtenValue") @db.Decimal(18, 3)
  RejectedValue  Decimal?             @default(0, map: "DF_invoices_RejectedValue") @db.Decimal(18, 3)
  isPaid         Int                  @default(0, map: "DF_invoices_isPaid")
  PaidValue      Decimal?             @default(0, map: "DF_invoices_PaidValue") @db.Decimal(18, 3)
  openDate       DateTime?            @db.Date
  closeDate      DateTime?            @db.Date
  Discount       Decimal?             @db.Decimal(18, 3)
  CloseNumber    Int?
  NetValue       Decimal?             @db.Decimal(18, 4)
  ClaimNo        Int?
  InvoiceNumber  Int?
  netValueSTR    String?              @db.NVarChar(250)
  currencyPrice  Decimal?             @default(1, map: "dv_currencyPrice_dvalue") @db.Decimal(18, 3)
  invoices_notes invoices_notes[]
  InvoicesValues dbo_InvoicesValues[] @ignore

  //User added
  patientExaminations PatientExamination[]
  patientServices     PatientServices[]
  institute           institutes           @relation(fields: [instituteId], references: [instituteId], onUpdate: NoAction, map: "FK_invoices_institutes")
  healthCenter        healthCenters        @relation(fields: [centerId], references: [centerId], onUpdate: NoAction, map: "FK_invoices_healthCenters")
  //

  @@index([invoiceStart], map: "IX_invoices_Start")
  @@index([instituteId, centerId], map: "NonClusteredIndex-InstituteAndCenterWithInclude")
  @@index([instituteId], map: "NonClusteredIndex-InstituteWithInclude")
  @@schema("fawt")
}

model Invoices_DailyProcedures {
  Id            Int       @id(map: "PK_Invoices_DailyProcedures") @default(autoincrement())
  InvoiceId     String    @db.NVarChar(55)
  AddedAt       DateTime  @db.DateTime
  AddedBy       String    @db.NVarChar(55)
  ProcedureDesc String    @db.NVarChar(255)
  IsActive      Boolean?
  IsDone        Boolean?  @default(false, map: "DF_Invoices_DailyProcedures_IsDone")
  DoneAt        DateTime? @db.DateTime
  DoneBy        String?   @db.NVarChar(55)
  DirectedTo    Int?

  @@schema("fawt")
}

model invoices_notes {
  id        Int       @id(map: "PK_invoices_notes") @default(autoincrement())
  noteId    String    @db.VarChar(20)
  invoiceId String    @db.NVarChar(55)
  serviceId String    @db.NChar(20)
  noteText  String    @db.NText
  plusValue Decimal   @db.Decimal(18, 3)
  cutValue  Decimal   @db.Decimal(18, 3)
  addedAt   DateTime  @db.DateTime
  userName  String    @db.NVarChar(55)
  invoices  invoices  @relation(fields: [invoiceId], references: [invoiceId], onDelete: Cascade, map: "FK_invoices_notes_invoices")
  users     Dal_users @relation(fields: [userName], references: [username], onUpdate: NoAction, map: "FK_invoices_notes_users")

  @@schema("fawt")
}

model Invoices_StateTrans {
  Id         Int       @id(map: "PK_Invoices_StateTrans") @default(autoincrement())
  InvoiceId  String?   @db.NVarChar(55)
  OpenedAt   DateTime? @db.DateTime
  OpenedBy   String?   @default("-1", map: "DF_Invoices_StateTrans_OpenedBy") @db.NVarChar(55)
  ClosedAt   DateTime? @db.DateTime
  ClosedBy   Int?
  LastUpdate DateTime? @default(now(), map: "DF_Invoices_StateTrans_LastUpdate") @db.DateTime
  IsActive   Boolean?  @default(true, map: "DF_Invoices_StateTrans_IsActive")
  AddedBy    Int?

  @@schema("fawt")
}

model Invoices_Trans {
  Id          Int       @id(map: "PK_Invoices_Trans") @default(autoincrement())
  InvoiceId   String?   @db.NVarChar(55)
  Received    Boolean?  @default(false, map: "DF_Invoices_Trans_Received")
  ReceivedBy  Int?
  ReceivedAt  DateTime? @db.DateTime
  Sent        Boolean?  @default(false, map: "DF_Invoices_Trans_Sent")
  SentBy      Int?
  SentAt      DateTime? @db.DateTime
  Collected   Boolean?  @default(false, map: "DF_Invoices_Trans_Collected")
  CollectedBy Int?
  CollectedAt DateTime? @db.DateTime
  Paid        Boolean?  @default(false, map: "DF_Invoices_Trans_Paid")
  PaidBy      Int?
  PaidAt      DateTime? @db.DateTime
  Certified   Boolean?
  CertifiedBy Int?
  CertifiedAt DateTime? @db.DateTime
  Identical   Boolean?
  IdenticalBy Int?
  IdenticalAt DateTime? @db.DateTime
  ReceivedOn  DateTime? @db.DateTime
  SentOn      DateTime? @db.DateTime
  CollectedOn DateTime? @db.DateTime
  PaidOn      DateTime? @db.DateTime

  @@schema("fawt")
}

model log_table {
  Id              BigInt  @id(map: "PK_log_table") @default(autoincrement())
  TableName       String  @db.NVarChar(50)
  DataID          String  @db.NVarChar(100)
  Request         String  @db.NVarChar(50)
  healthCentersIP String? @db.NVarChar(15)
  IdName          String? @db.NVarChar(255)

  @@index([healthCentersIP], map: "IX_log_table_IP")
  @@index([TableName], map: "IX_log_table_TableName")
  @@schema("dbo")
}

model nationality {
  id         Int     @id(map: "PK_nationality") @default(autoincrement())
  nationCode String  @unique(map: "IX_nationality") @db.NVarChar(5)
  nationName String  @db.NVarChar(55)
  isActive   Boolean

  @@schema("huia")
}

model outReceipt {
  Id            Int           @id(map: "PK_outReceipt") @default(autoincrement())
  ReceiptId     String        @unique(map: "IX_outReceipt") @db.NVarChar(55)
  CenterId      String        @db.NVarChar(55)
  Amount        Decimal       @db.Decimal(18, 3)
  PaymentType   String        @db.NVarChar(50)
  ReceiptDate   DateTime      @db.Date
  checkNo       String?       @db.NVarChar(40)
  bankName      String?       @db.NVarChar(250)
  checkDate     DateTime?     @db.Date
  healthCenters healthCenters @relation(fields: [CenterId], references: [centerId], map: "FK_outReceipt_healthCenters")

  @@schema("fawt")
}

model package_services {
  id                    Int                   @id(map: "PK_[fawt].package_services") @default(autoincrement())
  packageServiceId      String                @unique(map: "IX_package_services-PackageServiceIdWithInclude") @db.NVarChar(55)
  packageId             String                @db.NVarChar(55)
  serviceId             String                @db.NVarChar(55)
  healthcenter_services healthcenter_services @relation(fields: [serviceId], references: [ServiceID], onDelete: Cascade, onUpdate: NoAction, map: "FK_package_services_healthcenter_services")
  Packages              Packages              @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_package_services_Packages")

  @@unique([packageId, serviceId], map: "IX_package_services-PackageidAndServiceid")
  @@index([serviceId], map: "IX_package_services_Serviceid")
  @@index([packageId], map: "NonClusteredIndex-PackageidWithIncludePackageServiceid")
  @@schema("fawt")
}

model Packages {
  id                  Int                  @id(map: "PK_Categoris") @default(autoincrement())
  packageID           String               @unique(map: "IX_Packages") @db.NVarChar(55)
  packageName         String               @db.NVarChar(250)
  contractId          String               @db.NVarChar(55)
  limit               Decimal              @db.Decimal(18, 2)
  coverage            Int
  isValid             Boolean
  PackageColor        Int?
  package_services    package_services[]
  Institute_contracts Institute_contracts  @relation(fields: [contractId], references: [contractId], onUpdate: NoAction, map: "FK_Packages_Institute_contracts")
  Relation_Coverage   Relation_Coverage[]
  SpentPackage        SpentPackage[]
  SpentPackageTN      SpentPackageTN[]
  SpentPackageZH      SpentPackageZH[]
  subscribers_Credit  subscribers_Credit[]

  @@index([packageID, contractId], map: "NonClusteredIndex-contractAndPackageWithInclude")
  @@schema("fawt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model parameters {
  parameterId    String @db.NVarChar(55)
  paramenterName String @db.NVarChar(55)
  parameterValue String @db.NVarChar(55)
  parameterInput String @db.NVarChar(55)
  reportId       String @db.NVarChar(55)

  @@ignore
  @@schema("dal")
}

model PartnerInfo {
  id            Int             @id(map: "PK_PartnerInfo_1") @default(autoincrement())
  InfoId        String          @unique(map: "IX_PartnerInfo") @db.NVarChar(55)
  PhoneNumber   String?         @db.NVarChar(20)
  location      String?         @db.NVarChar(55)
  email         String?         @db.NVarChar(55)
  healthCenters healthCenters[]
  institutes    institutes[]

  @@schema("huia")
}

model PatientExamination {
  id                   Int                    @id(map: "PK_PatientExamination_details") @default(autoincrement())
  patientExaminationID String                 @unique(map: "IX_PatientExamination") @db.NVarChar(55)
  RecordId             String                 @db.NVarChar(255)
  staffId              String                 @db.NVarChar(55)
  packageServiceId     String                 @db.NVarChar(55)
  Service_code         String                 @db.NVarChar(50)
  Service_name         String                 @db.NVarChar(250)
  Price                Decimal?               @db.Decimal(18, 4)
  Insurance            Int
  Cash                 Decimal?               @db.Decimal(18, 4)
  CashOverLimit        Decimal?               @db.Decimal(18, 4)
  Deffered             Decimal?               @db.Decimal(18, 4)
  Note                 String?                @db.NVarChar(500)
  demandStatus         String                 @db.NVarChar(55)
  addedAt              DateTime?              @db.DateTime
  invoiceId            String?                @db.NVarChar(55)
  CliamStatus          String?                @db.NVarChar(55)
  subscriberId         String?                @db.NVarChar(55)
  centerId             String?                @db.NVarChar(55)
  workInjure           Boolean?
  rejected             Decimal?               @db.Decimal(18, 4)
  ExaminationLevel     Int?                   @default(0, map: "DF_PatientExamination_ExaminationLevel")
  Examination_services Examination_services[]
  ExaminationData      ExaminationData[]
  Reasons              huia_Reasons           @relation(fields: [demandStatus], references: [reasonId], onUpdate: NoAction, map: "FK_PatientExamination_FawtReasons")
  healthcenters_staff  healthcenters_staff    @relation(fields: [staffId], references: [staffId], onUpdate: NoAction, map: "FK_PatientExamination_healthcenters_staff")
  subscribers_records  subscribers_records    @relation(fields: [RecordId], references: [recordId], onUpdate: NoAction, map: "FK_PatientExamination_SubscribersRecords")

  //User added
  userClaimActions UsersClaimsActions[]
  invoice          invoices?            @relation(fields: [invoiceId], references: [invoiceId])
  healthCenters    healthCenters?       @relation(fields: [centerId], references: [centerId])
  //

  @@index([centerId], map: "NonClusteredIndex-CenterIdWithInclude")
  @@index([invoiceId], map: "NonClusteredIndex-InvoiceWithInclude")
  @@index([RecordId], map: "NonClusteredIndex-RecordIdWithInclude")
  @@index([workInjure], map: "NonClusteredIndex-WorkInjuryWithInclude")
  @@schema("fawt")
}

model PatientExaminationServices_Log {
  Id            Int       @id(map: "PK_PatientExaminationServices_Log") @default(autoincrement())
  ReferenceType String?   @db.NVarChar(5)
  ReferenceID   Int?
  ReferenceCode String?   @db.NVarChar(55)
  InsertedAt    DateTime? @default(now(), map: "DF_PatientExaminationServices_Log_InsertedAt") @db.DateTime
  InsertedBy    String?   @db.NVarChar(55)
  activity      String?   @db.NVarChar(55)
  CliamStatus   String?   @db.NVarChar(55)

  @@schema("fawt")
}

model PatientInfo {
  id           Int         @default(autoincrement())
  PatientId    String      @id(map: "PK__PatientI__970EC366A7766399") @db.NVarChar(55)
  SubscriberId String      @db.NVarChar(55)
  Role         String      @db.NVarChar(55)
  Apptstate    Boolean
  Apptdate     DateTime    @db.DateTime
  Password     String?     @db.NVarChar(55)
  PhoneNumber  Int
  subscribers  subscribers @relation(fields: [SubscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK_PatientInfo_subscribers")

  @@schema("appt")
}

model PatientRejectServices {
  id               Int       @id(map: "PK_PatientRejectServices") @default(autoincrement())
  patientSeviceId  String    @db.NVarChar(55)
  RecordId         String?   @db.NVarChar(255)
  dalilId          String?   @db.NVarChar(55)
  patientName      String?   @db.NVarChar(255)
  staffId          String?   @db.NVarChar(55)
  packageServiceId String?   @db.NVarChar(55)
  Service_code     String?   @db.NVarChar(50)
  Service_name     String?   @db.NVarChar(250)
  Price            Decimal?  @db.Decimal(18, 3)
  Insurance        Int?
  Cash             Decimal?  @db.Decimal(18, 3)
  Deffered         Decimal?  @db.Decimal(18, 3)
  Note             String?   @db.NVarChar(500)
  demandStatus     String?   @db.NVarChar(55)
  status           Int?
  patientMasterID  String?   @db.NVarChar(255)
  addedAt          DateTime? @db.DateTime
  CliamStatus      String?   @db.NVarChar(55)
  subscriberId     String?   @db.NVarChar(55)
  centerId         String?   @db.NVarChar(55)
  workInjury       Boolean?
  invoiceId        String?   @db.NVarChar(55)
  CashOverLimit    Decimal?  @db.Decimal(18, 3)

  @@schema("fawt")
}

model PatientServices {
  id                   Int                    @id(map: "PK_PatientServices_details") @default(autoincrement())
  patientSeviceId      String                 @unique(map: "IX_PatientServices") @db.NVarChar(55)
  RecordId             String                 @db.NVarChar(255)
  staffId              String                 @db.NVarChar(55)
  packageServiceId     String                 @db.NVarChar(55)
  Service_code         String                 @db.NVarChar(50)
  Service_name         String                 @db.NVarChar(250)
  Price                Decimal?               @db.Decimal(18, 4)
  Insurance            Int
  Cash                 Decimal?               @db.Decimal(18, 4)
  CashOverLimit        Decimal?               @db.Decimal(18, 4)
  Deffered             Decimal?               @db.Decimal(18, 4)
  Note                 String?                @db.NVarChar(500)
  demandStatus         String                 @db.NVarChar(55)
  addedAt              DateTime               @db.DateTime
  invoiceId            String?                @db.NVarChar(55)
  CliamStatus          String?                @db.NVarChar(55)
  subscriberId         String?                @db.NVarChar(55)
  centerId             String?                @db.NVarChar(55)
  workInjury           Boolean?
  rejected             Decimal?               @db.Decimal(18, 4)
  Examination_services Examination_services[]
  Reasons              huia_Reasons           @relation(fields: [demandStatus], references: [reasonId], onUpdate: NoAction, map: "FK_PatientServices_FawtReasons")
  subscribers_records  subscribers_records    @relation(fields: [RecordId], references: [recordId], onUpdate: NoAction, map: "FK_PatientServices_SubscribersRecords")

  //User added
  medicationReviews PatientServices_MedicationsReviewed[]
  invoice           invoices?                             @relation(fields: [invoiceId], references: [invoiceId])
  healthCenters     healthCenters?                        @relation(fields: [centerId], references: [centerId])
  //

  @@index([centerId], map: "NonClusteredIndex-CenterIdWithInclude")
  @@index([invoiceId], map: "NonClusteredIndex-InvoiceWithInclude")
  @@index([RecordId], map: "NonClusteredIndex-RecordIdWithInclude")
  @@index([workInjury], map: "NonClusteredIndex-WorkInjuryWithInclued")
  @@schema("fawt")
}

model PatientServicesMedications {
  Id              Int       @id(map: "PK_PatientServicesMedications") @default(autoincrement())
  patientSeviceId String?   @db.NVarChar(55)
  UnitId          Int?
  UnitSize        Int?      @default(1, map: "DF_PatientServicesMedications_UnitSize")
  UnitPrice       Decimal?  @db.Decimal(18, 3)
  Quantity        Int?      @default(1, map: "DF_PatientServicesMedications_Quantity")
  Total           Decimal?  @db.Decimal(18, 3)
  IsChronic       Boolean?  @default(false, map: "DF_PatientServicesMedications_IsChronic")
  InsertedAt      DateTime? @default(now(), map: "DF_PatientServicesMedications_InsertedAt") @db.DateTime
  IsActive        Boolean?  @default(true, map: "DF_PatientServicesMedications_IsActive")

  @@schema("fawt")
}

model PatientServicesNotes {
  Id            Int       @id(map: "PK_PatientServicesNotes") @default(autoincrement())
  NoteID        String?   @db.NVarChar(55)
  ReferenceID   String?   @db.NVarChar(55)
  ReferenceType Int?
  Note          String?   @db.NVarChar(250)
  AddedAt       DateTime? @db.DateTime
  AddedBy       Int?

  @@schema("fawt")
}

model PatientServicesTrans {
  psid           String   @id(map: "PK_PatientServicesTrans") @db.NVarChar(55)
  workId         String   @db.NVarChar(55)
  fullName       String   @db.NVarChar(223)
  relationshipID String?  @db.NVarChar(9)
  RecordId       String   @db.NVarChar(255)
  recordedAt     DateTime @db.DateTime
  centerName     String   @db.NVarChar(255)
  serviceType    String?  @db.VarChar(4)
  Service_name   String   @db.NVarChar(250)
  Price          Decimal? @db.Decimal(18, 4)
  Cash           Decimal? @db.Decimal(18, 4)
  Deffered       Decimal? @db.Decimal(18, 4)
  rejected       Decimal? @db.Decimal(18, 4)

  @@schema("fawt")
}

model fawt_Reasons {
  Id                Int       @id(map: "PK_Reasons") @default(autoincrement())
  ReasonId          String    @db.NVarChar(55)
  Type              Int
  ReasonDescription String    @db.NVarChar(Max)
  patientServiceId  String    @db.NVarChar(55)
  AddBy             String    @db.NVarChar(55)
  AddedAt           DateTime? @default(now(), map: "DF_Reasons_AddedBy") @db.DateTime
  ReviewType        Int?

  @@map("Reasons")
  @@schema("fawt")
}

model huia_Reasons {
  id                             Int                              @id(map: "PK_Reasons") @default(autoincrement())
  reasonId                       String                           @unique(map: "Reasons_reasionId_UNIQUE") @db.NVarChar(55)
  reasonName                     String                           @db.NVarChar(255)
  resonDescribtion               String                           @db.NVarChar(255)
  reasonClass                    Int
  isActive                       Boolean
  healthCenters                  healthCenters[]
  PatientExamination             PatientExamination[]
  PatientServices                PatientServices[]
  Subscriber_DeactivationReasons Subscriber_DeactivationReasons[]

  @@map("Reasons")
  @@schema("huia")
}

model RecordData {
  id                  Int                 @id(map: "PK_RecordData") @default(autoincrement())
  dataId              String              @db.NVarChar(55)
  recordId            String              @unique(map: "IX_RecordData") @db.NVarChar(255)
  descriptionText     String              @db.NText
  subscribers_records subscribers_records @relation(fields: [recordId], references: [recordId], map: "FK_RecordData_subscribers_records")

  @@schema("fawt")
}

model Relation_Coverage {
  id                  Int                 @id(map: "PK_institutes_Coverage") @default(autoincrement())
  coverageid          String              @unique(map: "IX_Relation_Coverage") @db.NVarChar(55)
  ContractId          String              @db.NVarChar(55)
  relationshipID      String              @db.NVarChar(9)
  packageId           String              @db.NVarChar(55)
  coverageLimit       Decimal             @db.Decimal(18, 3)
  coveragePercent     Int
  isActive            Boolean
  Institute_contracts Institute_contracts @relation(fields: [ContractId], references: [contractId], onUpdate: NoAction, map: "FK_Relation_Coverage_Institute_contracts")
  Packages            Packages            @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_Relation_Coverage_Packages")
  RelationShips       RelationShips       @relation(fields: [relationshipID], references: [relationshipId], onUpdate: NoAction, map: "FK_Relation_Coverage_RelationShips")

  @@schema("fawt")
}

model RelationShips {
  ID                Int                 @id(map: "PK_RelationShips") @default(autoincrement())
  relationshipId    String              @unique(map: "IX_RelationShips") @db.NVarChar(9)
  relationshipName  String              @db.NVarChar(55)
  IncreasedValue    Int?                @default(1, map: "DF_RelationShips_IncreasedValue")
  isActive          Boolean
  minNumber         Int?
  maxNumber         Int?
  type              Boolean?
  Relation_Coverage Relation_Coverage[]
  SpentPackage      SpentPackage[]
  SpentPackageTN    SpentPackageTN[]
  SpentPackageZH    SpentPackageZH[]
  subscribers       subscribers[]

  @@schema("huia")
}

model reports {
  id                Int         @default(autoincrement())
  reportId          String      @id(map: "PK_reports") @db.NVarChar(55)
  reportClass       Int
  reportName        String      @db.NVarChar(55)
  reportDescription String      @db.NVarChar(Max)
  query             String      @db.NVarChar(Max)
  ReportFile        Bytes?
  ReportType        Int         @db.SmallInt
  addedAt           DateTime?   @default(now(), map: "DF_reports_addedAt") @db.DateTime
  updatedAt         DateTime?   @default(now(), map: "DF_reports_updatedAt") @db.DateTime
  isActive          Boolean?    @default(true, map: "DF_reports_isActive")
  Terms             dal_Terms[]

  @@schema("dal")
}

model Sections {
  id                  Int                   @id(map: "PK_Sections") @default(autoincrement())
  sectionName         String                @db.NVarChar(255)
  sectionCode         String                @unique(map: "IX_Sections") @db.NVarChar(55)
  parentSection       String?               @db.NVarChar(55)
  ApptState           Boolean?
  ApptName            String?               @db.NVarChar(100)
  Doctors             Doctors[]
  Services            Services[]
  subscribers_records subscribers_records[]

  @@schema("fawt")
}

model Services {
  id                    Int                     @id(map: "PK_Services") @default(autoincrement())
  ServiceID             String                  @unique(map: "IX_Services") @db.NVarChar(55)
  ServiceName           String                  @db.NVarChar(255)
  ServiceCode           String                  @unique(map: "IX_Services_1") @db.NVarChar(55)
  sectionCode           String                  @db.NVarChar(55)
  ServiceType           Int
  WHO_code              String?                 @db.NVarChar(255)
  maxPrice              Decimal?                @db.Decimal(18, 2)
  healthcenter_services healthcenter_services[]
  Sections              Sections                @relation(fields: [sectionCode], references: [sectionCode], onUpdate: NoAction, map: "FK_Services_Sections")

  @@schema("fawt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Specialties {
  Id            Int     @default(autoincrement())
  SpecialtyID   String? @default("lower(newid())", map: "DF_Specialties_SpecialtyID") @db.NVarChar(55)
  SpecialtyName String? @db.NVarChar(255)

  @@ignore
  @@schema("fawt")
}

model SpentPackage {
  id                 Int           @id(map: "PK_SpentPackage") @default(autoincrement())
  SpentId            String        @unique(map: "IX_SpentPackage") @db.NVarChar(55)
  packageId          String        @db.NVarChar(55)
  subscriberId       String        @db.NVarChar(55)
  relationshipId     String        @db.NVarChar(9)
  FamilyId           String        @db.NVarChar(255)
  isActive           Boolean
  Spent              Decimal       @db.Decimal(18, 3)
  CoverPercentage    Int?
  CoverLimit         Decimal?      @db.Decimal(18, 3)
  Packages           Packages      @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_SpentPackage_Packages")
  RelationShips      RelationShips @relation(fields: [relationshipId], references: [relationshipId], onUpdate: NoAction, map: "FK_SpentPackage_RelationShips")
  SpentPackage       SpentPackage  @relation("SpentPackageToSpentPackage", fields: [id], references: [id], onUpdate: NoAction, map: "FK_SpentPackage_SpentPackage")
  other_SpentPackage SpentPackage? @relation("SpentPackageToSpentPackage")
  subscribers        subscribers   @relation(fields: [subscriberId], references: [subscriberId], onDelete: Cascade, onUpdate: NoAction, map: "FK_SpentPackage_subscribers")

  @@unique([packageId, subscriberId], map: "uq_spentPackage")
  @@schema("fawt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SpentPackage22 {
  id             BigInt?
  SpentId        String  @db.NVarChar(60)
  packageId      String? @db.VarChar(5)
  subscriberId   String  @db.NVarChar(60)
  relationshipId String  @db.NVarChar(9)
  familyID       String  @db.NVarChar(260)
  isActive       Int
  Spent          Decimal @db.Decimal(3, 3)

  @@ignore
  @@schema("fawt")
}

model SpentPackageTN {
  id             Int           @id(map: "PK_SpentPackageTN") @default(autoincrement())
  SpentId        String        @db.NVarChar(55)
  packageId      String        @db.NVarChar(55)
  subscriberId   String        @db.NVarChar(55)
  relationshipId String        @db.NVarChar(9)
  FamilyId       String        @db.NVarChar(55)
  isActive       Boolean
  Spent          Decimal       @db.Decimal(18, 3)
  Credit         Decimal       @default(0, map: "DF_SpentPackageTN_Credit") @db.Decimal(18, 3)
  Packages       Packages      @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_SpentPackageTN_Packages")
  RelationShips  RelationShips @relation(fields: [relationshipId], references: [relationshipId], onUpdate: NoAction, map: "FK_SpentPackageTN_RelationShips")
  subscribers    subscribers   @relation(fields: [subscriberId], references: [subscriberId], onDelete: Cascade, onUpdate: NoAction, map: "FK_SpentPackageTN_subscribers")

  @@unique([packageId, subscriberId], map: "uq_spentPackageTN")
  @@schema("fawt")
}

model SpentPackageZH {
  id             Int           @id(map: "PK_SpentPackageZH") @default(autoincrement())
  SpentId        String        @db.NVarChar(55)
  packageId      String        @db.NVarChar(55)
  subscriberId   String        @db.NVarChar(55)
  relationshipId String        @db.NVarChar(9)
  FamilyId       String        @db.NVarChar(55)
  isActive       Boolean
  Spent          Decimal       @db.Decimal(18, 3)
  Packages       Packages      @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_SpentPackageZH_Packages")
  RelationShips  RelationShips @relation(fields: [relationshipId], references: [relationshipId], onUpdate: NoAction, map: "FK_SpentPackageZH_RelationShips")
  subscribers    subscribers   @relation(fields: [subscriberId], references: [subscriberId], onDelete: Cascade, onUpdate: NoAction, map: "FK_SpentPackageZH_subscribers")

  @@unique([packageId, subscriberId], map: "uq_spentPackageZH")
  @@schema("fawt")
}

model Subscriber_DeactivationReasons {
  id           Int          @id(map: "PK_Subscriber_DeactivationReasons") @default(autoincrement())
  SubscriberId String       @db.NVarChar(55)
  ReasonId     String       @db.NVarChar(55)
  AddedAt      DateTime     @db.DateTime
  RemovedAt    DateTime?    @db.DateTime
  Reasons      huia_Reasons @relation(fields: [ReasonId], references: [reasonId], onUpdate: NoAction, map: "FK_Subscriber_DeactivationReasons_Reasons")
  subscribers  subscribers  @relation(fields: [SubscriberId], references: [subscriberId], onDelete: Cascade, map: "FK_Subscriber_DeactivationReasons_subscribers")

  @@schema("huia")
}

model subscriberCredit_Services {
  id                    Int                   @id(map: "PK_subscriberCreditServices") @default(autoincrement())
  subscriberServiceId   String                @db.NVarChar(55)
  subscriberCreditId    String                @db.NVarChar(55)
  ServiceID             String                @db.NVarChar(55)
  healthcenter_services healthcenter_services @relation(fields: [ServiceID], references: [ServiceID], onUpdate: NoAction, map: "FK_subscriberCredit_Services_healthcenter_services")
  subscribers_Credit    subscribers_Credit    @relation(fields: [subscriberCreditId], references: [subscriberCreditId], onUpdate: NoAction, map: "FK_subscriberCredit_Services_subscribers_Credit")

  @@schema("fawt")
}

model subscribers {
  id                             Int                              @id(map: "PK_subscribers_id") @default(autoincrement())
  subscriberId                   String                           @unique(map: "subscribers$subscriberId") @db.NVarChar(55)
  verificationMethod             Int
  workId                         String                           @db.NVarChar(55)
  famliyOrder                    Int?
  DalilID                        String                           @db.NVarChar(255)
  isActive                       Int                              @default(1, map: "DF__subscribe__isAct__0B91BA14") @db.SmallInt
  instituteId                    String                           @db.NVarChar(55)
  relationshipID                 String?                          @db.NVarChar(9)
  familyID                       String                           @db.NVarChar(155)
  isSub                          Boolean?
  verificationType               Int?
  InsuranceStatus                Boolean?
  fingerprints                   fingerprints?
  fingerprints_updates           fingerprints_updates[]
  PatientInfo                    PatientInfo[]
  SpentPackage                   SpentPackage[]
  SpentPackageTN                 SpentPackageTN[]
  SpentPackageZH                 SpentPackageZH[]
  Subscriber_DeactivationReasons Subscriber_DeactivationReasons[]
  institutes                     institutes                       @relation(fields: [instituteId], references: [instituteId], onUpdate: NoAction, map: "FK_subscribers_institutes")
  RelationShips                  RelationShips?                   @relation(fields: [relationshipID], references: [relationshipId], onDelete: NoAction, onUpdate: NoAction, map: "FK_subscribers_RelationShips")
  subscribers_Credit             subscribers_Credit[]
  subscribers_info               subscribers_info?
  subscribers_records            subscribers_records[]
  subscribers_tags               subscribers_tags[]
  SubscribersNotes               SubscribersNotes[]

  @@unique([workId, famliyOrder, instituteId], map: "AK_workid")
  @@index([instituteId(sort: Desc)], map: "IX_subcribersInstituetWithinclude")
  @@index([DalilID], map: "IX_subscribers_DalilID")
  @@index([instituteId], map: "IX_subscribers_instituteId")
  @@index([instituteId, relationshipID], map: "NonClusteredIndex-InstituteAndRelationshipWithInclude")
  @@index([familyID, isSub], map: "NonClusteredIndex-subscriberidWithIncludeFamilyIdAndIsSub")
  @@schema("huia")
}

model subscribers_Credit {
  id                        Int                         @id(map: "PK_subscribers_Credit") @default(autoincrement())
  subscriberCreditId        String                      @unique(map: "IX_subscribers_Credit") @db.NVarChar(55)
  subscriberId              String                      @db.NVarChar(55)
  centerId                  String                      @db.NVarChar(55)
  creditValue               Decimal                     @db.Decimal(18, 3)
  startDate                 DateTime                    @db.DateTime
  reminderDays              Int
  notes                     String?                     @db.NVarChar(Max)
  packageId                 String                      @db.NVarChar(55)
  isValid                   Boolean?
  subscriberCredit_Services subscriberCredit_Services[]
  healthCenters             healthCenters               @relation(fields: [centerId], references: [centerId], map: "FK_subscribers_Credit_healthCenters")
  Packages                  Packages                    @relation(fields: [packageId], references: [packageID], onUpdate: NoAction, map: "FK_subscribers_Credit_Packages")
  subscribers               subscribers                 @relation(fields: [subscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK_subscribers_Credit_subscribers")

  @@schema("fawt")
}

model Subscribers_hidden {
  Id           Int     @id(map: "PK_Subscribers_hidden") @default(autoincrement())
  SubscriberId String  @db.NVarChar(55)
  CenterId     String? @db.NVarChar(5)
  Description  String? @db.NVarChar(250)

  @@schema("huia")
}

model subscribers_info {
  id              Int         @id(map: "PK_subscribers_info_id") @default(autoincrement())
  subscriberId    String      @unique(map: "subscribers_info$subscriberId") @db.NVarChar(55)
  firstName       String      @db.NVarChar(55)
  fatherName      String      @db.NVarChar(55)
  grandFatherName String?     @db.NVarChar(55)
  familyName      String      @db.NVarChar(55)
  birthday        DateTime    @db.Date
  nationality     String?     @db.NVarChar(5)
  nationalId      String?     @db.NVarChar(55)
  gender          String      @db.NVarChar(1)
  passport        String?     @db.NVarChar(55)
  residence       String?     @db.NVarChar(55)
  addedAt         DateTime?   @db.DateTime
  AddedBy         String?     @db.NVarChar(55)
  note            String?     @db.NVarChar(255)
  subscribers     subscribers @relation(fields: [subscriberId], references: [subscriberId], onDelete: Cascade, onUpdate: NoAction, map: "FK_subscribers_info_subscribers")

  @@index([addedAt], map: "IX_subscribers_info_addedAt")
  @@index([subscriberId], map: "NonClusteredIndex-FullnameWithInclude")
  @@schema("huia")
}

model subscribers_LimitCredit {
  Id           Int       @id(map: "PK_subscribers_LimitCredit") @default(autoincrement())
  SubscriberId String?   @db.NVarChar(55)
  Year         Int?      @default(2023, map: "DF_subscribers_LimitCredit_Year")
  Credit       Decimal?  @default(0, map: "DF_subscribers_LimitCredit_Credit") @db.Decimal(18, 3)
  AddedAt      DateTime? @default(now(), map: "DF_subscribers_LimitCredit_AddedAt") @db.DateTime
  IsActive     Boolean?  @default(true, map: "DF_subscribers_LimitCredit_IsActive")

  @@index([SubscriberId], map: "NonClusteredIndex-subscriberWithInclude")
  @@schema("huia")
}

model subscribers_records {
  id                  Int                  @id(map: "PK_fingerprints_records_id") @default(autoincrement())
  recordId            String               @unique(map: "fingerprints_records$recordId") @db.NVarChar(255)
  subscriberId        String               @db.NVarChar(55)
  staffId             String               @db.NVarChar(55)
  identified          Int                  @db.SmallInt
  recordedAt          DateTime             @db.DateTime
  notes               String               @db.NVarChar(255)
  centerId            String               @db.NVarChar(55)
  sectionId           String?              @db.NVarChar(55)
  admissionDate       DateTime?            @db.DateTime
  dischargeDate       DateTime?            @db.DateTime
  PatientExamination  PatientExamination[]
  PatientServices     PatientServices[]
  RecordData          RecordData?
  healthCenters       healthCenters        @relation(fields: [centerId], references: [centerId], map: "FK_subscribers_records_healthCenters")
  healthcenters_staff healthcenters_staff  @relation(fields: [staffId], references: [staffId], onUpdate: NoAction, map: "FK_subscribers_records_healthcenters_staff")
  Sections            Sections?            @relation(fields: [sectionId], references: [sectionCode], onDelete: NoAction, onUpdate: NoAction, map: "FK_subscribers_records_Sections")
  subscribers         subscribers          @relation(fields: [subscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK_subscribers_records_subscribers")

  @@index([recordedAt(sort: Desc)], map: "IX_subcribersRecordAtWithinclude")
  @@index([centerId], map: "NonClusteredIndex-centerWithIncludeRecord")
  @@index([recordId], map: "NonClusteredIndex-RecordIdWithInclude")
  @@index([subscriberId], map: "NonClusteredIndex-subscriberIdWithInclue")
  @@schema("huia")
}

model subscribers_recordsLog {
  Id         Int       @id(map: "PK_subscribers_recordsLog") @default(autoincrement())
  RecordId   String?   @db.NVarChar(55)
  insertedAt DateTime? @default(now(), map: "DF_subscribers_recordsLog_insertedAt") @db.DateTime

  @@schema("huia")
}

model subscribers_tags {
  id           Int         @id(map: "PK_subscribers_tags_id") @default(autoincrement())
  subscriberId String      @db.NVarChar(55)
  tagId        String      @db.NVarChar(55)
  subscribers  subscribers @relation(fields: [subscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK_subscribers_tags_subscribers")
  tags         tags        @relation(fields: [tagId], references: [tagId], onDelete: Cascade, map: "subscribers_tags$subscribers_tags_tag_id")

  @@schema("huia")
}

model SubscribersNotes {
  Id           Int         @id(map: "PK__Subscrib__EACE355F9D2F9F6F") @default(autoincrement())
  NoteId       String      @db.NVarChar(55)
  subscriberId String      @db.NVarChar(55)
  Note         String      @db.NVarChar(Max)
  AddedAt      DateTime    @default(now(), map: "DF__Subscribe__Added__660BFB01") @db.DateTime
  AddedBy      Int?
  updateAt     DateTime?   @default(now(), map: "DF_SubscribersNotes_updatedAt") @db.DateTime
  isActive     Boolean?
  subscribers  subscribers @relation(fields: [subscriberId], references: [subscriberId], onUpdate: NoAction, map: "FK__Subscribe__Added__67001F3A")

  @@schema("huia")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B615C196F54") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
  @@schema("dbo")
}

model tags {
  id                 Int                  @id(map: "PK_tags_id") @default(autoincrement())
  tagId              String               @unique(map: "tags$tagId") @db.NVarChar(55)
  tagName            String               @db.NVarChar(55)
  healthcenters_tags healthcenters_tags[]
  institutes_tags    institutes_tags[]
  subscribers_tags   subscribers_tags[]

  @@schema("huia")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
// model appt_Terms {
//   id               Int                @default(autoincrement())
//   TermId           String             @db.NVarChar(55)
//   TermCode         String             @db.NVarChar(55)
//   TermName         String             @db.NVarChar(55)
//   DoctorsScheduals DoctorsScheduals[]

//   @@map("Terms")
//   @@ignore
//   @@schema("appt")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dal_Terms {
  termId        String   @id(map: "Terms_PK") @db.NVarChar(55)
  termName      String   @db.NVarChar(255)
  isString      Boolean
  xLocation     Int
  yLocation     Int
  componentName String   @db.NVarChar(55)
  reportId      String?  @db.NVarChar(55)
  termOrder     Int?     @default(0, map: "DF_Terms_termOrderNo")
  reports       reports? @relation(fields: [reportId], references: [reportId], onDelete: Cascade, onUpdate: NoAction, map: "FK_Terms_reports")

  @@map("Terms")
  @@schema("dal")
}

model Dal_users {
  id                Int                 @id(map: "PK_users_id") @default(autoincrement())
  username          String              @unique(map: "users$username") @db.NVarChar(55)
  password          String              @db.NVarChar(255)
  email             String?             @unique(map: "users$email") @db.NVarChar(255)
  joinedAt          DateTime            @db.DateTime
  isActive          Boolean             @default(true, map: "DF__users__isActive__3E1D39E1")
  isAdmin           Boolean
  invoices_notes    invoices_notes[]
  users_info        users_info?
  users_permissions users_permissions[]
  //

  //User Added
  // usersClaimActions                   UsersClaimsActions[]
  @@map("users")
  //
  @@schema("dal")
}

model users_info {
  id              Int       @id(map: "PK_users_info_id") @default(autoincrement())
  username        String    @unique(map: "users_info$username") @db.NVarChar(55)
  firstName       String    @db.NVarChar(55)
  fatherName      String    @db.NVarChar(55)
  grandFatherName String    @db.NVarChar(55)
  familyName      String    @db.NVarChar(55)
  birthday        DateTime  @db.Date
  nationality     String?   @db.NVarChar(5)
  nationalId      String?   @db.NVarChar(255)
  gender          String?   @db.NVarChar(1)
  passport        String?   @db.NVarChar(255)
  residence       String?   @db.NVarChar(255)
  users           Dal_users @relation(fields: [username], references: [username], onDelete: Cascade, map: "users_info$users_info_username")

  @@schema("dal")
}

model users_permissions {
  id                        Int       @id(map: "PK_users_permissions") @default(autoincrement())
  username                  String    @db.NVarChar(55)
  subscriberSave            Boolean   @default(false, map: "DF_users_permissions_subscriberSave")
  SubscriberActivate        Boolean   @default(false, map: "DF_users_permissions_SubscriberActivate")
  InstituteSave             Boolean   @default(false, map: "DF_users_permissions_InstituteSave")
  CenterSave                Boolean   @default(false, map: "DF_users_permissions_CenterSave")
  TagSave                   Boolean   @default(false, map: "DF_users_permissions_TagSave")
  InvoiceSave               Boolean   @default(false, map: "DF_users_permissions_InvoiceSave")
  PackageSave               Boolean   @default(false, map: "DF_users_permissions_PackageSave")
  DalilServiceSave          Boolean   @default(false, map: "DF_users_permissions_DalilServiceSave")
  DalilMedicationsSave      Boolean?  @default(false, map: "DF_users_permissions_DalilMedicationsSave")
  DalilActivateSubscriberse Boolean?  @default(false, map: "DF_users_permissions_DalilActivateSubscriberse")
  EditMedDefaultUnit        Boolean?  @default(false, map: "DF_users_permissions_EditMedDefaultUnit")
  EditDiagnosisCode         Boolean?  @default(false, map: "DF_users_permissions_EditDiagnosisCode")
  DeleteFromInvoice         Boolean?  @default(false, map: "DF_users_permissions_DeleteFromInvoice")
  SubscriberInsuranceState  Boolean?  @default(false, map: "DF_users_permissions_SubscriberInsuranceState")
  MedicalReviewAdmin        Boolean?  @default(false, map: "DF_users_permissions_MedicalReviewAdmin")
  EditSpentPackage          Boolean?  @default(false, map: "DF_users_permissions_EditSpentPackage")
  AdministrativeReviewAdmin Boolean?  @default(false, map: "DF_users_permissions_AdministrativeReviewAdmin")
  users                     Dal_users @relation(fields: [username], references: [username], onUpdate: NoAction, map: "FK_users_permissions_users")

  @@schema("dal")
}

model users_sections {
  Id          Int     @id(map: "PK_users_sections") @default(autoincrement())
  UserId      Int?
  SectionCode String? @db.NVarChar(50)
  SectionName String? @db.NVarChar(50)

  @@schema("dal")
}

model UsersClaimsActions {
  id            Int       @id(map: "PK_UsersClaimsActions") @default(autoincrement())
  UserId        String?   @db.NVarChar(55)
  ClaimRecordId String?   @db.NVarChar(55)
  ServiceType   Int?
  ActionDate    DateTime? @db.DateTime
  ActionType    Int?
  ClaimStatus   String?   @db.NVarChar(55)

  //User Added
  ClaimRecord PatientExamination? @relation(fields: [ClaimRecordId], references: [patientExaminationID], onDelete: NoAction, map: "FK_UsersClaimsActions_ClaimRecord")
  // user        users?              @relation(fields: [UserId], references: [username])
  //

  @@schema("fawt")
}

model VerificationTypes {
  id   Int     @id(map: "PK_VerificationTypes")
  Name String? @db.NVarChar(50)

  @@schema("huia")
}

model fawt_InvoicesValues {
  InvoiceId              String  @id(map: "InvoicesValues_PK") @db.NVarChar(55)
  RealValue              Decimal @db.Decimal(18, 3)
  MedcationRealValue     Decimal @db.Decimal(18, 3)
  DiscountValue          Decimal @db.Decimal(18, 3)
  MedcationDiscountValue Decimal @db.Decimal(18, 3)
  CashValue              Decimal @db.Decimal(18, 3)
  MedcationCashValue     Decimal @db.Decimal(18, 3)
  RejectValue            Decimal @db.Decimal(18, 3)
  MedcationRejectValue   Decimal @db.Decimal(18, 3)
  PriceValue             Decimal @db.Decimal(18, 3)
  MedcationPriceValue    Decimal @db.Decimal(18, 3)

  @@map("InvoicesValues")
  @@schema("fawt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dbo_InvoicesValues {
  InvoiceId              String   @id(map: "PK_InvoicesValues") @db.NVarChar(55)
  RealValue              Decimal  @db.Decimal(18, 3)
  MedcationRealValue     Decimal  @db.Decimal(18, 3)
  DiscountValue          Decimal  @db.Decimal(18, 3)
  MedcationDiscountValue Decimal  @db.Decimal(18, 3)
  invoices               invoices @relation(fields: [InvoiceId], references: [invoiceId], onDelete: Cascade, map: "FK_InvoicesValues_invoices")

  @@map("InvoicesValues")
  @@ignore
  @@schema("dbo")
}

model ChronicDiseases {
  Id                Int     @id(map: "PK_ChronicDiseases") @default(autoincrement())
  DiseaseId         String? @db.NVarChar(55)
  Name              String? @db.NVarChar(250)
  NameEn            String? @db.NVarChar(250)
  InternationalCode String? @db.NVarChar(50)

  @@schema("med")
}

model Classifications {
  Id         Int     @id(map: "PK_Classifications") @default(autoincrement())
  Code       String? @db.NVarChar(15)
  Name       String? @db.NVarChar(250)
  ParentCode String? @db.NVarChar(15)

  @@schema("med")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Countries {
  Id   Int     @default(autoincrement())
  Name String? @db.NVarChar(250)

  @@ignore
  @@schema("med")
}

model Diagnosis {
  Id          Int     @id(map: "PK_Diagnosis") @default(autoincrement())
  Code        String? @db.NVarChar(50)
  Name        String? @db.NVarChar(250)
  SectionCode String? @db.NVarChar(50)
  sectionName String? @db.NVarChar(250)

  @@schema("med")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model med_excel_reject {
  psid        String?  @db.NVarChar(500)
  reject_note String?  @db.NVarChar(500)
  prc         Decimal? @db.Decimal(18, 3)
  deff        Decimal? @db.Decimal(18, 3)
  reduct      Decimal? @db.Decimal(18, 3)
  rejection   Decimal? @db.Decimal(18, 3)
  net         Decimal? @db.Decimal(18, 3)
  reasontype  String?  @db.NVarChar(50)

  @@ignore
  @@schema("dbo")
}

model MedicationInfo {
  Id           Int     @id(map: "PK_MedicationInfo") @default(autoincrement())
  MedicationId String? @db.NVarChar(50)
  NationalCode String? @db.NVarChar(55)
  CountryId    Int?    @default(-1, map: "DF_MedicationInfo_CountryId")
  SupplierId   Int?    @default(-1, map: "DF_MedicationInfo_SupplierId")
  Dose         String? @db.NVarChar(50)

  @@schema("med")
}

model MedicationUnits {
  Id           Int      @id(map: "PK_MedicationUnits") @default(autoincrement())
  MedicationId String?  @db.NVarChar(50)
  UnitId       Int?
  UnitCode     String?  @db.NVarChar(50)
  UnitSize     Int?     @default(1, map: "DF_MedicationUnits_UnitSize")
  UnitPrice    Decimal? @default(0, map: "DF_MedicationUnits_UnitPrice") @db.Decimal(18, 3)
  IsActive     Boolean? @default(true, map: "DF_MedicationUnits_IsActive")
  IsDefault    Boolean?

  @@schema("med")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PatientServices_Medications {
  Id              Int       @default(autoincrement())
  patientSeviceId String?   @db.NVarChar(50)
  UnitId          Int?
  UnitSize        Int?
  Quantity        Int?
  IsChronic       Boolean?
  InsertedAt      DateTime? @db.DateTime
  IsActive        Boolean?
  UnitPrice       Decimal?  @db.Decimal(18, 3)
  MinQty          Int?      @default(0, map: "DF_PatientServices_Medications_MinQty")

  @@ignore
  @@schema("med")
}

model PatientServices_MedicationsReviewed {
  Id              Int       @id(map: "PK_PatientServices_MedReviewed") @default(autoincrement())
  UserId          Int
  PatienServiceId String    @db.NVarChar(55)
  CliamState      String?   @db.NVarChar(6)
  AddedAt         DateTime? @db.DateTime

  //User added
  patientService PatientServices @relation(fields: [PatienServiceId], references: [patientSeviceId])
  user           Lab_users       @relation(fields: [UserId], references: [us_ID])
  //

  @@schema("med")
}

model ReviewNotesList {
  Id       Int     @id(map: "PK_MedReviewNotes") @default(autoincrement())
  NoteDesc String? @db.NVarChar(250)

  @@schema("med")
}

model Services_medications {
  Id                 Int      @id(map: "PK_Services_medications") @default(autoincrement())
  ServiceID          String?  @db.NVarChar(55)
  NationalCode       String?  @db.NVarChar(55)
  IsOTC              Boolean? @default(true, map: "DF_Services_medications_IsOTC")
  ClassificationCode String?  @db.NVarChar(15)
  IsActive           Boolean?

  @@schema("med")
}

model Services_medicationsDiagnosis {
  Id            Int     @id(map: "PK_Services_medicationsDiagnosis") @default(autoincrement())
  ServiceID     String? @db.NVarChar(55)
  DiagnosisCode String? @db.NVarChar(50)
  Description   String? @db.NVarChar(250)

  @@schema("med")
}

model Services_packages {
  Id                Int    @id(map: "PK_Services_packages") @default(autoincrement())
  PackageDServiceId String @db.NVarChar(55)
  PackageId         String @db.NVarChar(50)
  DalilServiceId    String @db.NVarChar(55)
  NationalCode      String @db.NVarChar(50)

  @@schema("med")
}

model SubscriberDiagnosis {
  Id                    Int      @id(map: "PK_SubscriberDiagnosis") @default(autoincrement())
  SubscriberDiagnosisId String?  @db.NVarChar(55)
  SubscriberId          String?  @db.NVarChar(55)
  DiagnosisCode         String?  @db.NVarChar(50)
  IsActive              Boolean?

  @@schema("med")
}

model SubscriberMedications {
  Id                     Int       @id(map: "PK_SubDiseaseMedications") @default(autoincrement())
  SubscriberMedicationId String?   @db.NVarChar(55)
  SubscriberId           String?   @db.NVarChar(55)
  DalilServiceId         String?   @db.NVarChar(55)
  Quantity               Int?      @default(1, map: "DF_SubscriberMedications_Quantity")
  IsActive               Boolean?  @default(true, map: "DF_SubscriberMedications_IsActive")
  InsertedAt             DateTime? @db.DateTime
  UpdateAt               DateTime? @default(now(), map: "DF_SubscriberMedications_UpdateAt") @db.DateTime
  CoverPercentage        Int?

  @@schema("med")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Suppliers {
  Id   Int     @default(autoincrement())
  Name String? @db.NVarChar(250)

  @@ignore
  @@schema("med")
}

model temp_subscriberlist_CNC_ZWRC {
  idd   Int     @id(map: "PK_temp_subscriberlist_CNC_ZWRC")
  wrid  String? @db.NVarChar(10)
  sbid  String? @db.NVarChar(55)
  sbnm  String? @db.NVarChar(250)
  rshp  String? @db.NVarChar(10)
  notee String? @db.NVarChar(250)

  @@schema("dbo")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tmp_invoice_compare {
  PSID  String?  @db.NVarChar(50)
  styp  Int?
  pksid String?  @db.NVarChar(50)
  srcd  String?  @db.NVarChar(50)
  srnam String?  @db.NVarChar(250)
  prc   Decimal? @db.Decimal(18, 3)
  insu  Int?
  csh   Decimal? @db.Decimal(18, 3)
  deff  Decimal? @db.Decimal(18, 3)

  @@ignore
  @@schema("dbo")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Units {
  Id   Int
  Name String? @db.NVarChar(250)

  @@ignore
  @@schema("med")
}

model AnalysisDevices {
  and_ID          Int      @id(map: "PK_AnalysisDevices") @default(autoincrement())
  and_name        String?  @db.NVarChar(250)
  and_model       String?  @db.NVarChar(250)
  and_description String?  @db.NVarChar(250)
  and_familyId    Int?     @default(1, map: "DF_AnalysisDevices_and_familyId")
  and_state       Boolean? @default(true, map: "DF_AnalysisDevices_and_state")

  @@schema("lab")
}

model AnalysisFamily {
  anf_ID     Int       @id(map: "PK_AnalysisFamily") @default(autoincrement())
  anf_name   String?   @db.NVarChar(250)
  anf_nameEn String?   @db.NVarChar(250)
  anf_date   DateTime? @db.DateTime
  anf_user   Int?
  anf_state  Boolean?

  @@schema("lab")
}

model AnalysisInfo {
  an_ID            Int       @id(map: "PK_AnalysisInfo") @default(autoincrement())
  an_center        String?   @db.NVarChar(50)
  an_analysis_code String?   @db.NVarChar(55)
  an_family        Int?
  an_result_type   Int?
  an_device        Int?
  an_date          DateTime? @default(now(), map: "DF_AnalysisInfo_ani_date") @db.DateTime
  an_user          Int?
  an_state         Boolean?  @default(true, map: "DF_AnalysisInfo_ani_state")

  @@schema("lab")
}

model AnalysisMethods {
  Id         Int     @id(map: "PK_AnalysisMethods") @default(autoincrement())
  anm_device Int?
  anm_name   String? @db.NVarChar(250)

  @@schema("lab")
}

model AnalysisParameters {
  anp_ID         Int       @id(map: "PK_AnalysisParameters") @default(autoincrement())
  anp_analysis   Int?
  anp_name       String?   @db.NVarChar(250)
  anp_input_type Int?      @default(1, map: "DF_AnalysisParameters_anp_input_type")
  anp_date       DateTime? @db.DateTime
  anp_user       Int?
  anp_state      Boolean?

  @@schema("lab")
}

model AnalysisParametersTypes {
  api_ID   Int     @id(map: "PK_AnalysisParametersTypes") @default(autoincrement())
  api_name String? @db.NVarChar(50)

  @@schema("lab")
}

model AnalysisRanges {
  anr_ID        Int       @id(map: "PK_AnalysisRanges") @default(autoincrement())
  anr_analysis  Int?
  anr_parameter Int?
  anr_unit      Int?      @default(-1, map: "DF_AnalysisRanges_anr_unit")
  anr_sex       Int?      @default(-1, map: "DF_AnalysisRanges_anr_sex")
  anr_age       String?   @default("0", map: "DF_AnalysisRanges_anr_age") @db.NVarChar(50)
  anr_group     Int?
  anr_vtype     Int?      @default(-1, map: "DF_AnalysisRanges_anr_vtype")
  anr_value1    Float?
  anr_value2    Float?
  anr_value_str String?   @db.NVarChar(250)
  anr_range     String?   @db.NVarChar(250)
  anr_date      DateTime? @db.DateTime
  anr_user      Int?
  anr_state     Boolean?

  @@schema("lab")
}

model AnalysisRangesGroups {
  arg_ID   Int     @id(map: "PK_AnalysisRangesGroups")
  arg_name String? @db.NVarChar(50)

  @@schema("lab")
}

model AnalysisRangesVTypes {
  arvt_ID   Int     @id(map: "PK_AnalysisRangesVTypes")
  arvt_name String? @db.NVarChar(50)

  @@schema("lab")
}

model AnalysisResultTypes {
  art_ID   Int     @id(map: "PK_AnalysisResultTypes") @default(autoincrement())
  art_name String? @db.NVarChar(50)

  @@schema("lab")
}

model AnalysisUnits {
  anu_ID     Int      @id(map: "PK_AnalysisUnits") @default(autoincrement())
  anu_name   String?  @db.NVarChar(50)
  anu_symbol String?  @db.NVarChar(50)
  anu_state  Boolean? @default(true, map: "DF_AnalysisUnits_anu_state")

  @@schema("lab")
}

model Invoice_detailsANA_multi {
  idam_ID                 Int       @id(map: "PK_Invoice_detailsANA_multi") @default(autoincrement())
  idam_reference          Int?
  idam_result_code        String?   @db.NVarChar(55)
  idam_service_invoice_id String?   @db.NVarChar(50)
  idam_parameter          Int?
  idam_title              String?   @db.NVarChar(50)
  idam_title2             String?   @db.NVarChar(50)
  idam_title3             String?   @db.NVarChar(50)
  idam_result             String?   @db.NVarChar(50)
  idam_result2            String?   @db.NVarChar(50)
  idam_result3            String?   @db.NVarChar(50)
  idam_verified           Boolean?  @default(false, map: "DF_Invoice_detailsANA_multi_idam_verified")
  idam_verifiyDate        DateTime? @db.DateTime
  idam_verifiedBy         Int?
  idam_date               DateTime? @db.DateTime
  idam_user               Int?
  idam_state              Boolean?
  idam_insertedBy         Int?      @default(1, map: "DF_Invoice_detailsANA_multi_idam_insertedBy")
  idam_insertedAt         DateTime? @db.DateTime

  @@schema("lab")
}

model Invoice_detailsANA_ranges {
  irr_ID          Int       @id(map: "PK_Invoice_detailsANA_ranges") @default(autoincrement())
  irr_range_code  String?   @db.NVarChar(55)
  irr_result_id   Int?
  irr_result_code String?   @db.NVarChar(55)
  irr_result_type Int?
  irr_range_id    Int?
  irr_group       Int?
  irr_vtype       Int?
  irr_value1      Float?
  irr_value2      Float?
  irr_value_str   String?   @db.NVarChar(50)
  irr_range       String?   @db.NVarChar(250)
  irr_date        DateTime? @default(now(), map: "DF_Invoice_detailsANA_ranges_irr_date") @db.DateTime
  irr_user        Int?
  irr_state       Boolean?  @default(true, map: "DF_Invoice_detailsANA_ranges_irr_state")
  irr_insertedBy  Int?      @default(1, map: "DF_Invoice_detailsANA_ranges_irr_insertedBy")
  irr_insertedAt  DateTime? @db.DateTime

  @@schema("lab")
}

model Invoice_detailsANA_report {
  idar_ID                 Int       @id(map: "PK_Invoice_detailsANA_report") @default(autoincrement())
  idar_reference          BigInt?
  idar_result_code        String?   @db.NVarChar(55)
  idar_service_invoice_id String?   @db.NVarChar(50)
  idar_result             String?   @db.NVarChar(Max)
  idar_verified           Boolean?
  idar_verifiyDate        DateTime? @db.DateTime
  idar_verifiedBy         Int?
  idar_date               DateTime? @db.DateTime
  idar_user               Int?
  idar_state              Boolean?
  idar_insertedBy         Int?      @default(1, map: "DF_Invoice_detailsANA_report_idar_insertedBy")
  idar_insertedAt         DateTime? @db.DateTime

  @@schema("lab")
}

model Invoice_detailsANA_single {
  ida_ID                 Int       @id(map: "PK_Invoice_detailsANA") @default(autoincrement())
  ida_reference          BigInt?
  ida_result_code        String?   @db.NVarChar(55)
  ida_service_invoice_id String?   @db.NVarChar(50)
  ida_result             String?   @db.NVarChar(150)
  ida_parameter          Int?      @default(-1, map: "DF_Invoice_detailsANA_ida_parameter")
  ida_range              String?   @db.NVarChar(Max)
  ida_verified           Boolean?  @default(false, map: "DF_Invoice_detailsANA_ida_verified")
  ida_verifiyDate        DateTime? @db.DateTime
  ida_verifiedBy         Int?
  ida_date               DateTime? @db.DateTime
  ida_user               Int?
  ida_state              Boolean?
  ida_insertedBy         Int?      @default(1, map: "DF_Invoice_detailsANA_single_ida_insertedBy")
  ida_insertedAt         DateTime? @db.DateTime

  @@schema("lab")
}

model Roles {
  rl_ID       Int      @id(map: "PK_Roles") @default(autoincrement())
  rl_category Int?
  rl_name     String?  @db.NVarChar(50)
  rl_state    Boolean? @default(true, map: "DF_Table_1_pr_state")

  @@schema("lab")
}

model RolesCategories {
  rct_ID     Int      @id(map: "PK_RolesCategories") @default(autoincrement())
  rct_name   String?  @db.NVarChar(250)
  rct_system Int?
  rct_state  Boolean? @default(true, map: "DF_RolesCategories_rct_state")

  @@schema("lab")
}

model Lab_users {
  us_ID       Int       @id(map: "PK_tbl_Users") @default(autoincrement())
  us_empID    Int?
  us_type     Int?
  us_name     String?   @db.NVarChar(250)
  us_userName String?   @db.NVarChar(50)
  us_password String?   @db.NVarChar(Max)
  us_system   Int?
  us_date     DateTime? @db.DateTime
  us_user     Int?
  us_state    Boolean?

  //User Added
  patientService_MedicationReviews PatientServices_MedicationsReviewed[]
  //

  @@map("Users")
  @@schema("lab")
}

model UsersLog {
  ust_ID     Int       @id(map: "PK_tbl_UsersTrans") @default(autoincrement())
  ust_userId Int?
  ust_desc   String?   @db.NVarChar(50)
  ust_date   DateTime? @db.DateTime
  ust_user   Int?
  ust_state  Boolean?

  @@schema("lab")
}

model UsersPermissions {
  usp_ID          Int       @id(map: "PK_tbl_UsersPermissions") @default(autoincrement())
  usp_userId      Int?
  usp_fullcontrol Boolean?  @default(false, map: "DF_UsersPermissions_usp_full")
  usp_date        DateTime? @db.DateTime
  usp_user        Int?
  usp_state       Boolean?

  @@schema("lab")
}

model UsersRoles {
  ur_ID    Int      @id(map: "PK_UsersRoles") @default(autoincrement())
  ur_user  Int?
  ur_role  Int?
  ur_state Boolean?

  @@schema("lab")
}

view MedicalAudit {
  reason_row_no        Int
  ReasonId             String    @db.NVarChar(55)
  ReasonDescription    String    @db.NVarChar(Max)
  styp                 Int
  id                   Int
  patientExaminationID String    @db.NVarChar(55)
  RecordId             String    @db.NVarChar(255)
  staffId              String    @db.NVarChar(55)
  packageServiceId     String    @db.NVarChar(55)
  Service_code         String    @db.NVarChar(50)
  Service_name         String    @db.NVarChar(250)
  Price                Decimal?  @db.Decimal(18, 4)
  Insurance            Int
  Cash                 Decimal?  @db.Decimal(18, 4)
  CashOverLimit        Decimal?  @db.Decimal(18, 4)
  Deffered             Decimal?  @db.Decimal(18, 4)
  Note                 String?   @db.NVarChar(500)
  demandStatus         String    @db.NVarChar(55)
  addedAt              DateTime? @db.DateTime
  invoiceId            String?   @db.NVarChar(55)
  CliamStatus          String?   @db.NVarChar(55)
  subscriberId         String?   @db.NVarChar(55)
  centerId             String?   @db.NVarChar(55)
  workInjure           Boolean?
  rejected             Decimal?  @db.Decimal(18, 4)
  ExaminationLevel     Int?

  @@id([reason_row_no, styp, patientExaminationID])
  @@schema("fawt")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view View_section {
  id            Int     @default(autoincrement())
  sectionName   String  @db.NVarChar(255)
  sectionCode   String  @db.NVarChar(55)
  parentSection String? @db.NVarChar(55)

  @@ignore
  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pspe {
  id               Int
  patientSeviceId  String    @db.NVarChar(55)
  RecordId         String    @db.NVarChar(255)
  staffId          String    @db.NVarChar(55)
  packageServiceId String    @db.NVarChar(55)
  Service_code     String    @db.NVarChar(50)
  Service_name     String    @db.NVarChar(250)
  Price            Decimal   @db.Decimal(18, 3)
  Insurance        Int
  Cash             Decimal   @db.Decimal(18, 3)
  CashOverLimit    Decimal?  @db.Decimal(18, 3)
  Deffered         Decimal   @db.Decimal(18, 3)
  Note             String?   @db.NVarChar(500)
  demandStatus     String    @db.NVarChar(55)
  addedAt          DateTime? @db.DateTime
  invoiceId        String?   @db.NVarChar(55)
  CliamStatus      String?   @db.NVarChar(55)
  subscriberId     String?   @db.NVarChar(55)
  centerId         String?   @db.NVarChar(55)
  workInjury       Boolean?
  rejected         Decimal?  @db.Decimal(18, 3)

  @@ignore
  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view allService {
  id               Int      @default(autoincrement())
  ServiceID        String   @db.NVarChar(55)
  ServiceCode      String   @db.NVarChar(55)
  dalilServiceCode String   @db.NVarChar(55)
  ServiceName      String   @db.NVarChar(250)
  Price            Decimal  @db.Decimal(18, 2)
  updatedAt        DateTime @db.DateTime
  contractId       String   @db.NVarChar(55)
  isActive         Boolean
  ServiceType      Int?
  sectionCode      String?  @db.NVarChar(55)

  @@ignore
  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view Vhealthcenter_services {
  id          Int      @default(autoincrement())
  ServiceID   String   @db.NVarChar(55)
  ServiceCode String   @db.NVarChar(55)
  ServiceName String   @db.NVarChar(250)
  ServiceType Int?
  sectionCode String?  @db.NVarChar(55)
  Price       Decimal  @db.Decimal(18, 2)
  updatedAt   DateTime @db.DateTime

  @@ignore
  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VSubscribers_info {
  id              Int      @id @default(autoincrement())
  subscriberId    String   @unique @db.NVarChar(255)
  firstName       String   @db.NVarChar(55)
  fatherName      String   @db.NVarChar(55)
  grandFatherName String?  @db.NVarChar(55)
  familyName      String   @db.NVarChar(55)
  birthday        DateTime @db.Date
  nationality     String?  @db.NVarChar(5)
  nationalId      String?  @db.NVarChar(55)
  gender          String   @db.NVarChar(1)
  passport        String?  @db.NVarChar(55)
  residence       String?  @db.NVarChar(55)
  addedAt         DateTime @db.DateTime

  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view CentersView {
  CenterId           String   @db.NVarChar(55)
  CenterName         String   @db.NVarChar(255)
  CenterAllowance    Int
  IsActive           Boolean
  IsState            Boolean?
  CenterIcon         Bytes?   @db.Image
  currencyID         String?  @db.VarChar(20)
  CurrencyName       String?  @db.NVarChar(50)
  VpnIp              String?  @db.NVarChar(15)
  Logs               Int?
  DeactivationReason String?  @db.NVarChar(255)
  ReasonId           String?  @db.NVarChar(55)
  InfoId             String   @db.NVarChar(55)
  Email              String?  @db.NVarChar(55)
  Location           String?  @db.NVarChar(55)
  phoneNumber        String?  @db.NVarChar(20)

  @@ignore
  @@schema("dbo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view View_packages {
  id               Int
  packageServiceId String @db.NVarChar(55)
  packageId        String @db.NVarChar(55)
  serviceId        String @db.NVarChar(55)

  @@ignore
  @@schema("dbo")
}
